#!/bin/bash
set -eu
PROJECT_NAME=$1
PROJECT_ORG="net.hoskeri"

# only works in a git repo
test -d .git

DESTDIR=$(pwd)

cat<<END > ${DESTDIR}/build.sbt
lazy val alldeps = Seq(
  "org.scalatest" %% "scalatest" % "2.2.6" % "test",
  "org.apache.curator" % "curator-test" % "3.2.0" % "test",
  "org.apache.curator" % "curator-framework" % "3.2.0",
  "org.apache.curator" % "curator-client" % "3.2.0",
  "ch.qos.logback" % "logback-classic" % "1.1.7",
  "org.slf4j" % "log4j-over-slf4j" % "1.7.21",
  "org.slf4j" % "slf4j-api" % "1.7.21",
  "com.github.scopt" %% "scopt" % "3.5.0",
	"com.twitter" %% "finagle-core" % "6.34.0",
  "com.twitter" %% "finagle-http" % "6.34.0",
  "com.twitter" %% "finagle-thrift" % "6.34.0",
  "org.apache.thrift" % "libthrift" % "0.9.1",
  "com.twitter" % "scrooge-runtime" % "1.0.3"
)

lazy val root = (project in file("."))
  .settings(
    name := "${PROJECT_NAME}",
    organization := "${PROJECT_ORG}",
    scalaVersion := "2.11.8",
    fork in Test := true,
    fork in run  := true,
    autoCompilerPlugins := true,
    javaOptions += "-Dzookeeper.jmx.log4j.disable=true",
    mainClass in assembly := Some("${PROJECT_ORG}.${PROJECT_NAME}.Main"),
    libraryDependencies ++= alldeps
      .map(_.excludeAll(ExclusionRule(organization = "log4j")))
  )
END

mkdir -p ${DESTDIR}/project
cat <<END > ${DESTDIR}/project/build.properties
sbt.Version=0.13.11
END

cat <<END > ${DESTDIR}/project/plugins.sbt
addSbtPlugin("com.twitter" % "scrooge-sbt-plugin" % "3.14.1")
addSbtPlugin("com.typesafe.sbteclipse" % "sbteclipse-plugin" % "5.0.1")
addSbtPlugin("com.eed3si9n" % "sbt-assembly" % "0.14.3")
END

cat <<END > ${DESTDIR}/.gitignore
*.class
*.log
.cache
.history
.lib/
dist/*
target/
lib_managed/
src_managed/
project/boot/
project/plugins/project/
.scala_dependencies
.worksheet
.ensime_cache/
.ensime
END

mkdir -p ${DESTDIR}/src/{main,test}/{java,scala,resources}/
cat <<END > ${DESTDIR}/src/main/resources/logback.xml
<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <appender name="STDERR" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%d{ISO8601,UTC} %-5level %logger{36} %msg%n</pattern>
      <immediateFlush>false</immediateFlush>
    </encoder>
  </appender>
  <logger name="${PROJECT_ORG}.${PROJECT_NAME}" level="debug" additivity="false">
    <appender-ref ref="STDERR"/>
  </logger>
  <logger name="org.apache.zookeeper.ClientCnxn" level="WARN" />
  <root level="debug">
    <appender-ref ref="STDERR"/>
  </root>
</configuration>
END

cat <<END > ${DESTDIR}/src/main/scala/Main.scala
package ${PROJECT_ORG}.${PROJECT_NAME}

object Main {
  def main(string: Array[String]): Unit = {
    println("hello world")
  }
}
END

git add -A .
