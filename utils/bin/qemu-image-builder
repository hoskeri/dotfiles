#!/usr/bin/make -f
ROOTCMD := sudo
PREFIX := $(shell pwd)
DISTRIBUTION := debian/unstable
APT_MIRROR := "http://localhost:9999/debian"
WORKDIR := ${HOME}/.qemu-image-builder/work
BOOTSTRAP_DIR := ${WORKDIR}/debootstrap
DEBOOTSTRAP := ${ROOTCMD} /usr/bin/cdebootstrap
KERNEL_VERSION := 4.9.0-2-amd64
EXTRA_PACKAGES := systemd-sysv,ifupdown,initramfs-tools,linux-perf-4.9,vim-tiny,udhcpc,inetutils-ping
DEBOOTSTRAP_OPTS := -q --allow-unauthenticated -f minimal --include=linux-image-${KERNEL_VERSION},${EXTRA_PACKAGES}
DEST := $(WORKDIR)/build
SSH_AUTHKEYS := ${HOME}/.ssh/id_rsa.pub
ISOIMAGE_ROOT := $(DEST)/isoroot
SQUASHFS_IMAGE := $(DEST)/debootstrap.squashfs
EXT4FS_IMAGE := $(DEST)/debootstrap.raw
ISOIMAGE_FILE := $(WORKDIR)/debootstrap.iso

isoimage: build isolinuxcfg
	@echo " [ISO]    \t\t${ISOIMAGE_FILE}"
	@cp -f /usr/lib/ISOLINUX/isolinux.bin \
		     /usr/lib/syslinux/modules/bios/ldlinux.c32 \
				 $(ISOIMAGE_ROOT)/syslinux/
	@cp --link \
		$(DEST)/vmlinuz-${KERNEL_VERSION} \
		$(DEST)/initrd.img-${KERNEL_VERSION} \
			$(ISOIMAGE_ROOT)
	@cp --link $(SQUASHFS_IMAGE) $(ISOIMAGE_ROOT)/live/root.squashfs
	@genisoimage -quiet -R -r -o $(ISOIMAGE_FILE) \
		-b syslinux/isolinux.bin \
		-c syslinux/boot.cat \
		-no-emul-boot -boot-load-size 4 \
		-boot-info-table $(ISOIMAGE_ROOT) 2>/dev/null >/dev/null
	@rm -rf $(ISOIMAGE_ROOT)
	@rm -rf $(DEST) $(BOOTSTRAP_DIR)

build: clean squashfs ext4fs
	@cp -f \
		$(BOOTSTRAP_DIR)/boot/vmlinuz-${KERNEL_VERSION} \
		$(BOOTSTRAP_DIR)/boot/initrd.img-${KERNEL_VERSION} \
			$(DEST)
	@$(ROOTCMD) umount $(BOOTSTRAP_DIR) 2>/dev/null

squashfs: bootstrap overlay-boot ident
	@echo " [SQUASHFS]\t\t${SQUASHFS_IMAGE}"
	@${ROOTCMD} mksquashfs ${BOOTSTRAP_DIR} ${SQUASHFS_IMAGE} -no-progress -noappend 2>/dev/null >/dev/null
	@${ROOTCMD} chown $(shell id -u):$(shell id -g) ${SQUASHFS_IMAGE}

ext4fs: bootstrap overlay-boot ident
	@echo " [EXT4FS]\t\t${EXT4FS_IMAGE}"
	@${ROOTCMD} truncate -s 2g ${EXT4FS_IMAGE}
	@${ROOTCMD} mke2fs -t ext4 -D -F -E resize=33554432 -d ${BOOTSTRAP_DIR} ${EXT4FS_IMAGE} 524288 2>/dev/null >/dev/null
	@${ROOTCMD} chown $(shell id -u):$(shell id -g) ${EXT4FS_IMAGE}

makedirs:
	@mkdir -p $(DEST)
	@mkdir -p $(WORKDIR)
	@mkdir -p $(BOOTSTRAP_DIR)
	@mkdir -p $(ISOIMAGE_ROOT)/syslinux
	@mkdir -p $(ISOIMAGE_ROOT)/live/

ident:
	@echo " [CONFIG]\t\tprovisioning"
	@echo root:root|$(ROOTCMD) chpasswd -R ${BOOTSTRAP_DIR} >/dev/null
	@echo debian $(ROOTCMD) tee ${BOOTSTRAP_DIR}/etc/hostname >/dev/null
	@echo "auto ens3\niface ens3 inet dhcp\n" | $(ROOTCMD) tee ${BOOTSTRAP_DIR}/etc/network/interfaces >/dev/null
	@echo "deb http://httpredir.debian.org/debian unstable main contrib non-free" | $(ROOTCMD) tee ${BOOTSTRAP_DIR}/etc/apt/sources.list >/dev/null
	@$(ROOTCMD) install -d -m 0700 $(BOOTSTRAP_DIR)/root/.ssh >/dev/null
	@cat ${SSH_AUTHKEYS} | $(ROOTCMD) tee ${BOOTSTRAP_DIR}/root/.ssh/authorized_keys >/dev/null
	@$(ROOTCMD) chmod 0600 ${BOOTSTRAP_DIR}/root/.ssh/authorized_keys >/dev/null

clean:
	@echo " [CLEAN]\t\t${WORKDIR}"
	@$(ROOTCMD) umount $(BOOTSTRAP_DIR)/proc 2>/dev/null
	@$(ROOTCMD) umount $(BOOTSTRAP_DIR)/sys 2>/dev/null
	@$(ROOTCMD) umount $(BOOTSTRAP_DIR) 2>/dev/null
	@rm -rf $(WORKDIR)/build

overlay-boot: overlay overlay-hook
	@echo " [OVERLAY]\t\tinitramfs"
	@$(ROOTCMD) chmod +x $(BOOTSTRAP_DIR)/usr/share/initramfs-tools/hooks/overlay-hook
	@$(ROOTCMD) rm -f $(BOOTSTRAP_DIR)/boot/initrd.img-${KERNEL_VERSION}
	@$(ROOTCMD) chroot $(BOOTSTRAP_DIR) update-initramfs -k ${KERNEL_VERSION} -c 2>/dev/null >/dev/null

bootstrap: makedirs
	@echo " [BOOTSTRAP]\t\t${BOOTSTRAP_DIR}"
	@$(ROOTCMD) mount -t tmpfs none $(BOOTSTRAP_DIR)
	@$(DEBOOTSTRAP) $(DEBOOTSTRAP_OPTS) $(DISTRIBUTION) $(BOOTSTRAP_DIR) $(APT_MIRROR)

overlay-hook:
	@cat <<- EOF|$(ROOTCMD) tee $(BOOTSTRAP_DIR)/usr/share/initramfs-tools/hooks/overlay-hook >/dev/null
	#!/bin/sh -e
	. /usr/share/initramfs-tools/hook-functions
	case "$$1" in
	    prereqs)
				echo ""
				exit 0
	    ;;
	esac
	manual_add_modules iso9660
	manual_add_modules squashfs
	manual_add_modules overlay
	EOF

overlay:
	@cat <<- EOF|$(ROOTCMD) tee $(BOOTSTRAP_DIR)/usr/share/initramfs-tools/scripts/overlay >/dev/null
	mountroot() {
	    modprobe squashfs
	    modprobe overlay
			SQ_DEV=/dev/vda
			if blkid /dev/sr0 >/dev/null 2>/dev/null
			then
				mkdir -p /cdrom
				modprobe iso9660
				modprobe loop
				mount -t iso9660 -o ro /dev/sr0 /cdrom
				losetup /dev/loop0 /cdrom/live/root.squashfs
				SQ_DEV=/dev/loop0
			fi
	    mount -t squashfs \$$SQ_DEV /root
			mkdir -p /overlay
	    mount -t tmpfs -osize=512m none /overlay
	    mkdir -p /overlay/workdir /overlay/upperdir
	    mount -t overlay -olowerdir=/root,upperdir=/overlay/upperdir,workdir=/overlay/workdir live-root /root
	}
	EOF

isolinuxcfg:
	@cat <<- EOF > ${ISOIMAGE_ROOT}/syslinux/isolinux.cfg
	default Linux
	label Linux
	  kernel /vmlinuz-${KERNEL_VERSION}
	  append initrd=/initrd.img-${KERNEL_VERSION} ro quiet boot=overlay console=ttyS0
	EOF

.ONESHELL: overlay overlay-hook isolinuxcfg
