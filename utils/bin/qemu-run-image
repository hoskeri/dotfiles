#!/bin/bash -eu

err_exit() {
  >&2 echo "E: $*"
  exit 1
}

usage() {
  err_exit "usage: qemu-run-image image"
}

cleanup() {
  :
}

trap cleanup EXIT

script="$(readlink -f "${0}")"
dir="$(dirname "${script}")"
filename="$(basename "${script}")"
name="${filename%\.vm}"

swtpm_sock="${dir}/${filename}-vtpm.sock"
swtpm_state="${dir}/${filename}-vtpm.state"


declare -a swtpm_args=(
  socket
  --tpm2
  --flags not-need-init
  --ctrl type=unixio,path="${swtpm_sock}"
  --tpmstate backend-uri="file://${swtpm_state}"
)

declare -a swtpm_setup_args=(
  --tpm2
  --tpm-state "file://${swtpm_state}"
  --create-ek-cert
  --create-platform-cert
  --lock-nvram
  --not-overwrite
  --vmid "${name}-vm"
)

declare -a qemu_args=(
  -display none
  -serial stdio

  -name "$name-vm"
  -uuid "$name"

  -L . -bios /usr/share/qemu/OVMF.fd
  -machine q35

  -accel kvm -cpu host -smp 4
  -smbios "type=1,serial=ds=nocloud;h=${name};i=i-${name}"
  -m 2048

  -netdev "bridge,br=natbr0,id=net0"
  -device "virtio-net-pci,netdev=net0"

  -chardev socket,id=chrtpm,path="$swtpm_sock"
  -tpmdev emulator,id=tpm0,chardev=chrtpm
  -device tpm-tis,tpmdev=tpm0

  -drive if=virtio,format=raw,readonly=on,file="${name}.cidata.iso"

  -drive if=virtio,format=qcow2,snapshot=on,file="${name}.cloudimg.qcow2"
  -drive if=virtio,format=raw,file="${name}.datadisk.raw"
)

cmd="${1:-}"
shift
case "${cmd}" in
  vm)
    qemu-system-x86_64 "${qemu_args[@]}" "$@"
    ;;
  vtpm)
    test -f "${swtpm_state}" || err_exit "${swtpm_state} does not exist"
    swtpm "${swtpm_args[@]}" "$@"
    ;;
  vtpm_setup)
    swtpm_setup "${swtpm_setup_args[@]}" "$@"
    ;;
  *)
    err_exit "unknown command ${cmd}"
    ;;
esac
