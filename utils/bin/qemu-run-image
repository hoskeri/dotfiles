#!/bin/bash -eu

err_exit() {
  >&2 echo "E: $*"
  exit 1
}

usage() {
  err_exit "usage: qemu-run-image image name"
}

test -n "${1:-}" || usage
test -f "${1:-}" || usage

test -n "${2:-}" || usage

image="$(readlink -f "$1")"
test -f "$image" || err_exit "image file $image not found"

diskname=$(readlink -f "$2.qcow2")
test -f "$diskname" || qemu-img create -q -f qcow2 -b "$image" "$diskname"

name="$2"
spicesock=$(readlink -f "${name}.spice.sock")
ttysock=$(readlink -f "${name}.serial.sock")
monitorsock=$(readlink -f "${name}.monitor.sock")
uuid=$(random-uuid "$2")
macaddr=$(random-mac-address "$2")

exec qemu-system-x86_64 \
        -device qxl-vga,xres=1920,yres=1080 \
        -monitor none \
        -serial none \
        -chardev socket,path="$monitorsock",nowait,server,id=char0 \
        -chardev socket,path="$ttysock",nowait,server,id=char1 \
        -monitor chardev:char0 \
        -serial chardev:char1 \
        -device virtio-serial \
        -chardev spicevmc,id=vdagent,debug=0,name=vdagent \
        -device virtserialport,chardev=vdagent,name=com.redhat.spice.0 \
        -spice addr="$spicesock",unix,disable-ticketing \
        -name "$name" \
        -L . -bios /usr/share/qemu/OVMF.fd \
        -accel kvm -cpu host -smp 4 \
        -uuid "$uuid" \
        -netdev bridge,br=natbr0,id=net0 \
        -device virtio-net-pci,netdev=net0,mac="$macaddr" \
        -m 2048 \
        -drive file="$diskname",format=qcow2,if=virtio,cache=directsync
